{"version":3,"sources":["index.js"],"names":["DEBOUNCE_DELAY","searchBox","document","querySelector","countryList","countryInfo","onSearch","e","currentTarget","value","length","fetchCountries","then","r","innerHTML","createCardsMarcup","createCards","catch","error","console","log","name","fetch","json","Items","map","flags","official","svg","join","capital","population","languages","keys","Object","capitals","item","addEventListener"],"mappings":";;;AA4EC,aA5ED,QAAA,oBAEA,MAAMA,EAAiB,IAEjBC,EAAYC,SAASC,cAAc,eACnCC,EAAcF,SAASC,cAAc,iBACrCE,EAAcH,SAASC,cAAc,iBAK3C,SAASG,EAASC,GACVA,EAAEC,cAAcC,MAAMC,OAAS,EAC/BC,EAAeJ,EAAEC,cAAcC,OAC1BG,KAAKC,IACFT,EAAYU,UAAYC,EAAkBF,GAC1CR,EAAYS,UAAYE,EAAYH,KAEvCI,MAAMC,GAASC,QAAQC,IAAIF,IACQ,IAAjCX,EAAEC,cAAcC,MAAMC,SAC7BS,QAAQC,IAAI,8DACZhB,EAAYU,UAAY,IAKhC,SAASH,EAAeU,GACbC,OAAAA,6CAA6CD,oDAC/CT,KAAKC,GACKA,EAAEU,QAKrB,SAASR,EAAkBS,GAEhBA,OAAAA,EAAMC,IAAI,EAAGJ,KAAAA,EAAMK,MAAAA,MAElBF,GAAAA,EAAMd,QAAU,EACR,qDAEEW,EAAKM,+GAEUD,EAAME,iFAKpCC,KAAK,IAIZ,SAASb,EAAYQ,GAEVA,OAAAA,EAAMC,IAAI,EAAGJ,KAAAA,EAAMS,QAAAA,EAASC,WAAAA,EAAYL,MAAAA,EAAOM,UAAAA,MAE5CC,MAAAA,EAAOC,OAAOD,KAAKD,GAErBG,IAAAA,EAAW,GACV,IAAA,MAAMC,KAAQN,EACfK,EAAWC,EAKXZ,GAFJL,QAAQC,IAAIC,EAAKM,SAAUQ,EAAUJ,EAAYL,EAAME,IAAKI,EAAUC,IAEjD,IAAjBT,EAAMd,OACE,qDAEEW,EAAKM,yHAEUD,EAAME,iFAKpCC,KAAK,IAlEZ5B,EAAUoC,iBAAiB,QAAS/B","file":"src.f4d9e306.js","sourceRoot":"../src","sourcesContent":["import './css/styles.css';\n\nconst DEBOUNCE_DELAY = 300;\n\nconst searchBox = document.querySelector('#search-box');\nconst countryList = document.querySelector('.country-list');\nconst countryInfo = document.querySelector('.country-info');\n\n\nsearchBox.addEventListener('input', onSearch);\n\nfunction onSearch(e) {\n    if (e.currentTarget.value.length > 1) {\n        fetchCountries(e.currentTarget.value)\n            .then(r => {\n                countryList.innerHTML = createCardsMarcup(r);\n                countryInfo.innerHTML = createCards(r);\n            })\n            .catch(error => console.log(error));\n    } else if (e.currentTarget.value.length === 1) {\n        console.log(\"Too many matches found. Please enter a more specific name.\");\n        countryList.innerHTML = '';\n    };\n};\n\n\nfunction fetchCountries(name) {\n    return fetch(`https://restcountries.com/v3.1/name/${name}?fields=name,capital,population,flags,languages`)\n        .then(r => {\n            return r.json();\n        });\n};\n\n\nfunction createCardsMarcup(Items) {\n\n    return Items.map(({ name, flags }) => {\n\n        if (Items.length >= 1) {\n            return `\n                <li>\n                    ${name.official}\n                    <svg class=\"icon\" width=\"24\" height=\"24\">\n                        <use href=\"${flags.svg}\"></use>\n                    </svg>\n                </li>\n            `\n        };\n    }).join(\"\");\n};\n\n\nfunction createCards(Items) {\n\n    return Items.map(({ name, capital, population, flags, languages }) => {\n\n        const keys = Object.keys(languages);\n\n        let capitals = \"\";\n        for (const item of capital) {\n            capitals = item\n        };\n\n        console.log(name.official, capitals, population, flags.svg, languages[keys]);\n\n        if (Items.length === 1) {\n            return `\n                <li>\n                    ${name.official}, one item\n                    <svg class=\"icon\" width=\"24\" height=\"24\">\n                        <use href=\"${flags.svg}\"></use>\n                    </svg>\n                </li>\n            `\n        };\n    }).join(\"\");\n};\n"]}